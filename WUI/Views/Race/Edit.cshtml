@model WUI.Models.RaceModel

@{
    ViewBag.Title = "Edit";
    List<SelectListItem> cats = ViewBag.Categories;
    Layout = "~/Views/Shared/_adminLayout.cshtml";
}

<div class="row adminContent">
    <div class="col-lg-12">
        <div class="entete">
            <h3 class="titlePage">Edition de la course n°@Model.Id</h3>
            <div class="button-group pull-right">
                <a href="#" class="btn btn-primary withIcon" data-toggle="modal" data-target="#modalResultat"><i class="material-icons">list</i> Résultat </a>
                <a href="#" class="btn btn-primary withIcon" data-toggle="modal" data-target="#modalParticipant"> <i class="material-icons">group</i> Participants </a>
                <a href="#" class="btn btn-success withIcon" data-toggle="modal" data-target="#listePoints"> <i class="material-icons">edit_location</i> Itinéraire </a>
            </div>           
         </div>
         <hr />
        <div class="card">
            <div class="card-header">
                Organisateurs
            </div>
            <div class="card-block">
                @if (Model.Organisers != null)
                {
                <table class="table">
                    <thead>
                        <tr>
                            <th>#</th>
                            <th>Nom complet</th>
                            <th>Email</th>
                            <th>Téléphone</th>
                        </tr>
                    </thead>
                    <tbody>
                           @foreach (var item in Model.Organisers)
                            {
                            <tr>
                                <td>@item.Id</td>
                                <td>@item.Nom @item.Prenom</td>
                                <td>@item.Email</td>
                                <td>@item.Phone</td>
                            </tr>
                            }
                    </tbody>
                </table>
                } else
                {
                    <div class="alert alert-info">
                        Pas d'organisateur
                    </div>
                }

            </div>
        </div>
        <br />
        <div class="card">
            <div class="card-header">
                Informations Générales
            </div>
            <div class="card-block">
                @using (Html.BeginForm())
                {
                    @Html.AntiForgeryToken()
                    @Html.ValidationSummary(true)


                    @Html.HiddenFor(model => model.Id)

                    <div class="form-group">
                        @Html.LabelFor(m => m.Title)
                        @Html.TextBoxFor(m => m.Title, new { @class = "form-control", placeholder = "Saisissez un titre de course" })
                        @Html.ValidationMessageFor(m => m.Title)
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(m => m.Town)
                        @Html.TextBoxFor(m => m.Town, new { @class = "form-control", placeholder = "Saisissez La ville de la course" })
                        @Html.ValidationMessageFor(m => m.Town)
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(m => m.DateStart)
                        @Html.TextBoxFor(m => m.DateStart, new { @type = "date", @Value = Model.DateStart.ToString("yyyy-MM-dd"), @class="form-control" })
                        @Html.ValidationMessageFor(m => m.DateStart)
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(m => m.DateEnd)
                        @Html.TextBoxFor(m => m.DateEnd, new { @type = "date", @Value = Model.DateEnd.ToString("yyyy-MM-dd"), @class = "form-control" })
                        @Html.ValidationMessageFor(m => m.DateEnd)
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(m => m.Description)
                        @Html.TextAreaFor(m => m.Description, new { @class = "form-control" })
                        @Html.ValidationMessageFor(m => m.Description)
                    </div>
                    <button type="submit" class="btn btn-success " id="searchButton"> Valider </button>
                    @Html.ActionLink("Retour à la liste", "Index", null, new { @class = "btn btn-primary" })
                }
            </div>
         </div>  
    </div>
</div>

<!-- Modal Participant-->
<div class="modal fade" id="modalParticipant" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="exampleModalLabel">Participant à la course</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                @if (Model.Competitors != null)
                {
                    <table class="table table-responsive">
                        <thead>
                            <tr>
                                <th>#</th>
                                <th>Nom complet</th>
                                <th>Date de naissance</th>
                                <th>Email</th>
                                <th>Action</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var item in Model.Competitors)
                            {
                                <tr>
                                    <td>@item.Id</td>
                                    <td>@item.Nom @item.Prenom</td>
                                    <td>@item.DateNaissance</td>
                                    <td>@item.Email</td>
                                    <td><a href="#" class="btn btn-danger">Désinscrire</a></td>
                                </tr>
                            }
                        </tbody>
                    </table>
                } else
                {
                    <div class="alert alert-info">
                        Aucun participant à cette course 
                    </div>
                }
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Fermer</button>
            </div>
        </div>
    </div>
</div>
<!-- END MODAL -->

<!-- Modal Resultaat-->
<div class="modal fade" id="modalResultat" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="exampleModalLabel">Résultat de la course</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <table class="table table-responsive">
                    <thead>
                        <tr>
                            <th>Dossard</th>
                            <th>Courreurs</th>
                            <th>Rang</th>
                            <th>Temps</th>
                        </tr>
                    </thead>
                    <tbody>
                        <tr>
                            <td>1511</td>
                            <td>Usain Bolt</td>
                            <td>1</td>
                            <td>3h 04m 35s</td>
                        </tr>
                        <tr>
                            <td>10</td>
                            <td>Zizou</td>
                            <td>2</td>
                            <td>3h 35m 35s</td>
                        </tr>
                        <tr>
                            <td>878</td>
                            <td>Moi même</td>
                            <td>3</td>
                            <td>5h 04m 35s</td>
                        </tr>

                    </tbody>

                </table>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Fermer</button>
            </div>
        </div>
    </div>
</div>
<!-- END MODAL -->

<!-- Modal liste points-->
<div class="modal fade" id="listePoints" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="exampleModalLabel">Liste des points</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <div class="row">
                    <div class="col-lg-12">
                        <div id="map" style="height:500px;width:100%;"></div>
                    </div>
                    <div class="col-lg-12">
                        @using (Html.BeginForm("AddPoint", "Race", FormMethod.Post, new { id = "formID" }))
                        {
                            @Html.AntiForgeryToken()
                            @Html.ValidationSummary(true)
                            <table class="table">
                                <thead>
                                    <tr>
                                        <th>Longitude</th>
                                        <th>Latitude</th>
                                        <th>Point d'intêret</th>
                                        <th>Titre</th>
                                        <th>Categorie</th>
                                        <th>Action</th>
                                    </tr>
                                </thead>
                                <tbody id="tbody">
                                    @foreach(var item in Model.Points)
                                    {
                                        if (item != null)
                                        {
                                            <tr>
                                                <td>@item.Latitude</td>
                                                <td>@item.Longitude</td>
                                                <td>
                                                    @if (item.isPoi)
                                                    {
                                                        <span class="badge badge-success">OUI</span>
                                                    }
                                                    else
                                                    {
                                                        <span class="badge badge-warning">NON</span>
                                                    }
                                                </td>
                                                <td>
                                                    @if (item.titre == null)
                                                    {
                                                        <span class="badge badge-default">NULL</span>
                                                    }
                                                    else
                                                    {
                                                        @item.titre
                                                    }
                                                
                                                </td>
                                                <td>
                                                    @if (item.Category == null)
                                                    {
                                                        <span class="badge badge-default">NULL</span>
                                                    }
                                                    else
                                                    {
                                                        @item.Category.Title
                                                    }

                                                </td>
                                                <td><a href="@Url.Action("DeletePoint", new { idPoint = item.Id, idRace = Model.Id })" class="btn btn-danger delete">Supprimer</a></td>
                                            </tr>
                                        }
                                        //listPOIs.Add(poi.Points.Select(x => x.Id).First());
                                    }
                                </tbody>

                            </table>

                            <div class="form-group">
                                <div class="row new_form">
                                    <div class="col-3">
                                        @Html.LabelFor(m => m.point.Latitude)
                                        @Html.TextBoxFor(m => m.point.Latitude, new { @class = "form-control", id = "latitude" })
                                        @Html.ValidationMessageFor(m => m.point.Latitude)
                                    </div>
                                    <div class="col-3">
                                        @Html.LabelFor(m => m.point.Longitude)
                                        @Html.TextBoxFor(m => m.point.Longitude, new { @class = "form-control", id = "longitude" })
                                        @Html.ValidationMessageFor(m => m.point.Longitude)
                                    </div>
                                    <div class="col-3">
                                        <label> Points d'intérêt </label><br />
                                        <label class="switch" for="POIs">
                                            <input type="checkbox" name="checkbox" id="POIs" class="form-control" />
                                            <span class="slider round"></span>
                                        </label>
                                        
                                    </div>
                                    @Html.TextBoxFor(m => m.Id, new { type = "hidden", })
                                    @*@Html.TextBoxFor(m => m.Distance, new { type = "hidden", id = "distance"})*@
                                    <div class="col-3">
                                        <label>Action</label><br />
                                        <button type="submit" class="btn btn-success add" name="add"  value="Ajouter">Ajouter le point</button>
                                    </div>
                                </div>
                            </div>
                            <div class="form-group poi_info" style="display: none;">
                                <div class="row">
                                    <div class="col-5">
                                        <label for="poi_Title">Titre</label>
                                        @Html.TextBoxFor(m => m.point.titre, new { @class = "form-control", id = "titre" })
                                        @Html.ValidationMessageFor(m => m.point.titre)
                                    </div>
                                    <div class="col-5">
                                        <label for="poi_Title">Catégorie</label>
                                        @Html.DropDownListFor(m => m.point.Category.Id, cats, new { @class = "form-control", id = "categorie" })

                                    </div>
                                </div>
                            </div>
                        }
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Fermer</button>
            </div>
        </div>
    </div>
</div>
<!-- END MODAL -->


@section scripts {  


    <script>
        var markers = [] ;
        var map ;
        var pointDepart = null;
        var pointArrivee = null;
        var waypts = [];
        var directionsService;
        var directionsDisplay;
        var newPoint = false;
        var distance = 0;
        var idRace= @(new HtmlString(Json.Encode(Model.Id)));
        console.log(idRace) ;
        function initMap(newPoint) {
            var myLatLng =  {lat:47.217469436263684, lng:-1.5532457828521729};
            directionsService = new google.maps.DirectionsService;
            directionsDisplay = new google.maps.DirectionsRenderer;
            distance = 0;

            if(typeof newPoints !== 'undefined'){
                var points = newPoints
            } else {
                var points = @(new HtmlString(Json.Encode(Model.Points)));
            }

            // Create a map object and specify the DOM element for display.
            map = new google.maps.Map(document.getElementById('map'), {
                zoom: 12,
                center: myLatLng
            });

            if(!newPoint){
                for(var i = 0 ; i < points.length ; i ++){
                    if(points[i].isPoi){
                        if(points[i].Category.Id === 1) {
                            pointDepart = new google.maps.LatLng(points[i].Latitude, points[i].Longitude );
                        }else if(points[i].Category.Id === 2){
                            pointArrivee = new google.maps.LatLng(points[i].Latitude, points[i].Longitude );
                        }else{
                            var position = new google.maps.LatLng(points[i].Latitude,points[i].Longitude);
                            waypts.push({
                                location: position
                            });
                        }
                    }else{
                        var position = new google.maps.LatLng(points[i].Latitude, points[i].Longitude);
                        waypts.push({
                            location: position
                        });
                    }
                }
            }

            if((pointDepart != null) && (pointArrivee != null))
            {
                directionsDisplay.setMap(map);
                calculateAndDisplayRoute(directionsService, directionsDisplay);
            }

            google.maps.event.addListener(map, "click", function (e) {
                var marker_man = new google.maps.Marker({
                    position: e.latLng,
                    map: map
                });
                var latitude = e.latLng.lat().toString();
                var longitude = e.latLng.lng().toString();
                $("#latitude").val(latitude.replace(".",","));
                $("#longitude").val(longitude.replace(".",","));
            });
        }

        function calculateAndDisplayRoute(directionService, directionDisplay){
            var $self = this;
            //console.log(waypts);
            directionService.route({
                origin: pointDepart,
                destination: pointArrivee,
                waypoints: waypts,
                optimizeWaypoints: true,
                travelMode: google.maps.TravelMode.WALKING
            }, function(response, status){
                if(status === google.maps.DirectionsStatus.OK ){
                    directionDisplay.setOptions({ preserveViewport: true });
                    directionDisplay.setDirections(response);
                    var route = response.routes[0];
                    for(var j = 0 ; j < route.legs.length ; j ++){
                        distance += route.legs[j].distance.value;
                    }
            
                    var MyUrl = '@Url.Action("UpdateDistance")';
                    //var url1 = MyUrl.replace("__param1__", encodeURIComponent(distance));
                    //var url2 = url1.replace("__param2__", encodeURIComponent( $self.idRace));
                    var dataToSend = {distance: distance, idRace: idRace}
                    $.post(MyUrl, dataToSend, function( data ) {
                        $( ".result" ).html( data );
                    });
                    //$.ajax({
                    //    type: "GET",
                    //    url: url2
                    //})

                    //$("#distance").val(distance);

                    console.log(distance);
                }else{
                    console.log("La requête de la direction à échoué : " + status);
                }
            });
        }

        function addMarker(lat, long) {
            var marker = new google.maps.Marker({
                position: {lat: lat, lng: long},
                map: map
            });
            markers.push(marker)
        }

        $(function () {

            $("#POIs").on("click", function(){
                $(".poi_info").toggle();
            });

            $('#listePoints').on('shown.bs.modal', function (e) {
                google.maps.event.trigger(map, "resize");
            });


                 $("#formID").submit(function (e) {
                     e.preventDefault();
                     var dataToSend = $('#formID').serialize();
                     var MyUrl = {
                         MyUseFulUrl: '@Url.Action("AddPoint", "Race")'
                 };
                 $.ajax({
                     type: "POST",
                     url: MyUrl.MyUseFulUrl,
                     data: dataToSend,
                     success: function (data) {
                         var point = data.Points[data.Points.length - 1]
                         var url = '@Url.Action("DeletePoint", new { idPoint = "__param1__", idRace = "__param2__" })';
                         var url1 = url.replace("__param1__", encodeURIComponent(point.Id));
                         var url2 = url1.replace("__param2__", encodeURIComponent(data.Id));
                         var html = '<tr>';
                         html += '<td>' + point.Latitude + '</td>';
                         html += '<td>' + point.Longitude + '</td>';
                         if(point.isPoi) {
                             html +='<td><span class="badge badge-success">OUI</span></td>'
                         } else {
                             html +='<td><span class="badge badge-danger">NON</span></td>'
                         }
                         if(point.titre !== null) {
                             html += '<td>' + point.titre + '</td>'
                         } else {
                             html +='<td><span class="badge badge-default">NULL</span></td>'
                         }
                         if(point.Category !== null) {
                             html += '<td>' + point.Category.Title + '</td>'
                         } else {
                             html +='<td><span class="badge badge-default">NULL</span></td>'
                         }
                         html += "<td><a href='" + url2 + "' class='btn btn-danger delete'>Supprimer</a></td>"
                         html += '</tr>';
                         $('#tbody').append(html);

                         $(":input","#formID")
                             .val('')
                             .removeAttr('checked')
                             .removeAttr('selected');

                         var position = new google.maps.LatLng(point.Latitude, point.Longitude);
                         waypts.push({
                             location: position
                         });
                         newPoint = true;
                         initMap(newPoint);
                     }

                 })
             });

             $("#formID").on("click", ".delete", function (e) {
                 e.preventDefault();
                 var url = $(this).attr('href');
                 var $self = $(this);
                 $.ajax({
                     type: "GET",
                     url: url,
                     success: function (latitude) {
                         $self.parent().parent().remove();
                        var index = $.each(waypts, function(key, value){
                            if(value.location.lat() === latitude) {
                                return key;
                            }
                        });
                        waypts.splice(index,1) ;
                        newPoint  = true;
                         initMap(newPoint);
                     }
                 })
             });


         });

     </script>

<script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyCIyk34t3LjsAXYoq912qTIQoBz1QWfNp0&callback=initMap"
        async defer>

</script>
}